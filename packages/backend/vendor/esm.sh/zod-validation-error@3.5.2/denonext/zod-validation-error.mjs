/* esm.sh - zod-validation-error@3.5.2 */
import*as g from"/zod@^3.25.0?target=denonext";import*as a from"/zod@^3.25.0?target=denonext";function c(e){return e instanceof Error&&e.name==="ZodError"&&"issues"in e&&Array.isArray(e.issues)}var o=class extends Error{name;details;constructor(e,r){super(e,r),this.name="ZodValidationError",this.details=v(r)}toString(){return this.message}};function v(e){if(e){let r=e.cause;if(c(r))return r.issues}return[]}function F(e){return e instanceof o}function b(e){return e instanceof Error&&e.name==="ZodValidationError"}function E(e){return e.length!==0}function l(e){return e.description??""}var Z=/[$_\p{ID_Start}][$\u200c\u200d\p{ID_Continue}]*/u;function _(e){if(e.length===1){let r=e[0];return typeof r=="symbol"&&(r=l(r)),r.toString()||'""'}return e.reduce((r,n)=>{if(typeof n=="number")return r+"["+n.toString()+"]";if(typeof n=="symbol"&&(n=l(n)),n.includes('"'))return r+'["'+A(n)+'"]';if(!Z.test(n))return r+'["'+n+'"]';let s=r.length===0?"":".";return r+s+n},"")}function A(e){return e.replace(/"/g,'\\"')}var B="; ",R=99,h="Validation error",w=": ",M=", or ";function S(e={}){let{issueSeparator:r=B,unionSeparator:n=M,prefixSeparator:s=w,prefix:i=h,includePath:t=!0,maxIssuesInMessage:f=R}=e;return u=>{let m=u.slice(0,f).map(p=>d({issue:p,issueSeparator:r,unionSeparator:n,includePath:t})).join(r);return P(m,i,s)}}function d(e){let{issue:r,issueSeparator:n,unionSeparator:s,includePath:i}=e;if(r.code===a.ZodIssueCode.invalid_union)return r.unionErrors.reduce((t,f)=>{let u=f.issues.map(m=>d({issue:m,issueSeparator:n,unionSeparator:s,includePath:i})).join(n);return t.includes(u)||t.push(u),t},[]).join(s);if(r.code===a.ZodIssueCode.invalid_arguments)return[r.message,...r.argumentsError.issues.map(t=>d({issue:t,issueSeparator:n,unionSeparator:s,includePath:i}))].join(n);if(r.code===a.ZodIssueCode.invalid_return_type)return[r.message,...r.returnTypeError.issues.map(t=>d({issue:t,issueSeparator:n,unionSeparator:s,includePath:i}))].join(n);if(i&&E(r.path)){if(r.path.length===1){let t=r.path[0];if(typeof t=="number")return`${r.message} at index ${t}`}return`${r.message} at "${_(r.path)}"`}return r.message}function P(e,r,n){return r!==null?e.length>0?[r,e].join(n):r:e.length>0?e:h}function j(e,r={}){let s=x(r)([e]);return new o(s,{cause:new g.ZodError([e])})}function x(e){return"messageBuilder"in e?e.messageBuilder:S(e)}var z=(e,r)=>({message:j({...e,message:e.message??r.defaultError}).message});function C(e,r={}){if(!c(e))throw new TypeError(`Invalid zodError param; expected instance of ZodError. Did you mean to use the "${$.name}" method instead?`);return I(e,r)}function I(e,r={}){let n=e.errors,s;return E(n)?s=O(r)(n):s=e.message,new o(s,{cause:e})}function O(e){return"messageBuilder"in e?e.messageBuilder:S(e)}var V=(e={})=>r=>c(r)?I(r,e):r instanceof Error?new o(r.message,{cause:r}):new o("Unknown error");function $(e,r={}){return V(r)(e)}export{o as ValidationError,S as createMessageBuilder,z as errorMap,$ as fromError,C as fromZodError,j as fromZodIssue,F as isValidationError,b as isValidationErrorLike,c as isZodErrorLike,V as toValidationError};
//# sourceMappingURL=zod-validation-error.mjs.map