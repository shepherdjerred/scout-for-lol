import type { MostGamesPlayedCriteria } from "@scout-for-lol/data";
import type { MatchV5DTOs } from "twisted/dist/models-dto/index.js";
import type { LeaderboardEntry, PlayerWithAccounts } from "./types.js";
import { isPlayerInMatch, matchesQueue } from "./helpers.js";

/**
 * Process "Most Games Played" criteria
 * Counts the number of games played by each participant in the specified queue
 */
export function processMostGamesPlayed(
  matches: MatchV5DTOs.MatchDto[],
  participants: PlayerWithAccounts[],
  criteria: MostGamesPlayedCriteria,
): LeaderboardEntry[] {
  const gameCounts = new Map<number, number>();

  // Count games for each player
  for (const match of matches) {
    // Filter by queue
    if (!matchesQueue(match, criteria.queue)) continue;

    for (const participant of participants) {
      if (isPlayerInMatch(participant, match)) {
        const currentCount = gameCounts.get(participant.id) ?? 0;
        gameCounts.set(participant.id, currentCount + 1);
      }
    }
  }

  // Convert to leaderboard entries
  const entries: LeaderboardEntry[] = [];
  for (const participant of participants) {
    const count = gameCounts.get(participant.id) ?? 0;
    entries.push({
      playerId: participant.id,
      playerName: participant.alias,
      score: count,
    });
  }

  return entries;
}
