VERSION 0.8
FROM ../../+deno

prisma.generate:
  # this command fails if node isn't installed
  FROM ../../+deno-node
  RUN apt install -y openssl
  COPY --dir deno.json deno.lock .
  COPY --dir src/database/generate.ts prisma .
  RUN ./generate.ts
  # delete some files that are unneeded and that deno stuggled with
  RUN rm generated/client/runtime/edge-esm.cjs
  SAVE ARTIFACT generated/

deps:
  # for Prisma
  RUN apt update && apt install -y openssl
  WORKDIR /workspace/packages/backend

  COPY ../data+src/ /workspace/packages/data/src/
  COPY ../report+src/ /workspace/packages/report/src/
  COPY +prisma.generate/ .

  # download and cache dependencies
  CACHE --persist $DENO_DIR
  COPY --dir deno* src .
  # node_modules_dir is needed for yoga-wasm-web which we load from node_modules
  RUN deno install --frozen=true --reload --node-modules-dir=auto

# update Deno lockfile
lock:
  FROM ../../+deno
  COPY --dir deno.json .
  RUN deno install
  SAVE ARTIFACT deno.lock AS LOCAL deno.lock

check:
  FROM +deps
  CACHE $DENO_DIR
  RUN deno check src/index.ts
  RUN deno lint
  COPY test.env .env
  RUN deno test -A --unstable

image:
  ARG --required git_sha
  ARG --required version
  FROM +deps
  ENV VERSION=$version
  ENV GIT_SHA=$git_sha
  # so that migrations can run
  COPY --dir prisma .

  ENTRYPOINT deno run -A src/database/migrate.ts && deno run -A --unstable-ffi src/index.ts
  HEALTHCHECK  --interval=30s --timeout=5s --start-period=5s --retries=3 CMD deno run -A /workspace/packages/backend/src/health.ts || exit 1
  SAVE IMAGE --push ghcr.io/shepherdjerred/scout-for-lol:$version
  SAVE IMAGE --push ghcr.io/shepherdjerred/scout-for-lol:$git_sha
